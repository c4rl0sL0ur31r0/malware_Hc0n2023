
import os
import threading

from src.config.readerConfig import readerConfig
from src.modules.apis.malbazaarAPI import malbazaarApi


class malwareSamples:

    def __init__(self):
        self.malware_path = readerConfig().get_malware_location()

    def __get_malware_folder(self, family_name):
        full_path = r'{0}{1}'.format(self.malware_path, family_name)
        if os.path.exists(path=full_path) is False:
            os.mkdir(full_path)
        else:
            pass
        malware_path = full_path + '/'
        return malware_path

    @staticmethod
    def __thread_download(sha256, target_folder):
        download_thread = threading.Thread(target=malbazaarApi().download_malware, args=(sha256, target_folder))
        download_thread.start()

    def run(self, search_malware):
        """
        :param: search_malware: family malware like systembc
        :return:
        """
        response = malbazaarApi().tag_search(tag=search_malware)
        if 'ok' in response['query_status']:
            mal_path = self.__get_malware_folder(search_malware)
            for i in response['data']:
                print(i['sha256_hash'])
                malbazaarApi().download_malware(sha256=i['sha256_hash'], target_folder=mal_path)

